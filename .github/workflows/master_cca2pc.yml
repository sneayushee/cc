# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - cca2pc

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DF314306E8FE4D85A5E0F45D283410D2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_10619C2F13A542BEA1C1994961BD2D8A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_14A5FACD245F4F14A9BDBC78F97BF346 }}

      - name: Wait for SCM to stabilize
        run: |
          echo "Waiting 30 seconds for SCM to stabilize..."
          sleep 30

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cca2pc'
          slot-name: 'Production'
        continue-on-error: true

      - name: Check deployment status and wait if needed
        if: steps.deploy-to-webapp.outcome == 'failure'
        run: |
          echo "Initial deployment failed. Waiting 2 minutes before retry..."
          sleep 120
          echo "Retrying deployment..."

      - name: 'Retry deployment if first attempt failed'
        if: steps.deploy-to-webapp.outcome == 'failure'
        uses: azure/webapps-deploy@v3
        id: retry-deploy
        with:
          app-name: 'cca2pc'
          slot-name: 'Production'

      - name: Verify deployment
        run: |
          echo "Deployment completed. Waiting 30 seconds for application to start..."
          sleep 30
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://cca2pc-a8bxbvdjbjgraggx.southindia-01.azurewebsites.net)
          if [ $STATUS -ge 200 ] && [ $STATUS -lt 300 ]; then
            echo "Application is running successfully"
          else
            echo "Warning: Application may not be running correctly. Status code: $STATUS"
          fi
